{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Let\\xEDcia\\\\Documents\\\\r2t\\\\src\\\\ui\\\\src\\\\components\\\\UploadZone.jsx\",\n  _s = $RefreshSig$();\nimport Button from '@mui/material/Button';\nimport { DropZone } from './DropZone';\nimport { useContext, useState } from 'react';\nimport { InfoContext } from '../App';\nimport '../styles/uploadzone.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UploadZone() {\n  _s();\n  const [files, setFiles] = useState({\n    csv1: '',\n    csv2: ''\n  });\n  const setInfo = useContext(InfoContext);\n  const filesUploaded = Object.values(files).reduce((prev, curr) => {\n    return prev + (curr instanceof File ? 1 : 0);\n  }, 0);\n  const sendFiles = async () => {\n    const formData = new FormData();\n    formData.append('csv1', files.csv1);\n    formData.append('csv2', files.csv2);\n    try {\n      const res = await fetch(`http://localhost:5000/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (res.ok) {\n        const result = await res.json();\n\n        // Verifique se o resultado é um array\n        if (Array.isArray(result)) {\n          setInfo(result);\n        } else {\n          console.error('O resultado não é um array:', result);\n          setInfo([]); // Se o resultado não for um array, resetar para vazio\n        }\n      } else {\n        setInfo([]); // Resetar em caso de falha na requisição\n        console.error('Erro na resposta da requisição:', res.statusText);\n      }\n    } catch (error) {\n      setInfo([]); // Resetar em caso de erro na requisição\n      console.error('Erro ao enviar os arquivos:', error);\n    } finally {\n      setFiles({\n        csv1: '',\n        csv2: ''\n      }); // Resetando para as novas chaves\n    }\n  };\n  const button = filesUploaded >= 2 ? /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    onClick: sendFiles,\n    children: \"enviar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    disabled: true,\n    children: [\"Arquivos inseridos (\", filesUploaded, \" de 2)\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadzone\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadzone__dropzones\",\n      children: [/*#__PURE__*/_jsxDEV(DropZone, {\n        files: files,\n        setFiles: setFiles,\n        acceptType: {\n          'text/csv': ['.csv']\n        },\n        fileType: 'csv1'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropZone, {\n        files: files,\n        setFiles: setFiles,\n        acceptType: {\n          'text/csv': ['.csv']\n        },\n        fileType: 'csv2'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), button]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadZone, \"ju9Dyh0XBO4/rAPsqev8lG/Y8HM=\");\n_c = UploadZone;\nvar _c;\n$RefreshReg$(_c, \"UploadZone\");","map":{"version":3,"names":["Button","DropZone","useContext","useState","InfoContext","jsxDEV","_jsxDEV","UploadZone","_s","files","setFiles","csv1","csv2","setInfo","filesUploaded","Object","values","reduce","prev","curr","File","sendFiles","formData","FormData","append","res","fetch","method","body","ok","result","json","Array","isArray","console","error","statusText","button","variant","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","acceptType","fileType","_c","$RefreshReg$"],"sources":["C:/Users/Letícia/Documents/r2t/src/ui/src/components/UploadZone.jsx"],"sourcesContent":["import Button from '@mui/material/Button';\nimport { DropZone } from './DropZone';\nimport { useContext, useState } from 'react';\nimport { InfoContext } from '../App';\nimport '../styles/uploadzone.css';\n\nexport function UploadZone() {\n    const [files, setFiles] = useState({\n        csv1: '',\n        csv2: ''\n    });\n\n    const setInfo = useContext(InfoContext);\n\n    const filesUploaded = Object.values(files).reduce((prev, curr) => {\n        return prev + (curr instanceof File ? 1 : 0);\n    }, 0);\n\n    const sendFiles = async () => {\n        const formData = new FormData();\n        formData.append('csv1', files.csv1);\n        formData.append('csv2', files.csv2);\n\n        try {\n            const res = await fetch(`http://localhost:5000/upload`, {\n                method: 'POST',\n                body: formData\n            });\n\n            if (res.ok) {\n                const result = await res.json();\n\n                // Verifique se o resultado é um array\n                if (Array.isArray(result)) {\n                    setInfo(result);\n                } else {\n                    console.error('O resultado não é um array:', result);\n                    setInfo([]); // Se o resultado não for um array, resetar para vazio\n                }\n            } else {\n                setInfo([]); // Resetar em caso de falha na requisição\n                console.error('Erro na resposta da requisição:', res.statusText);\n            }\n        } catch (error) {\n            setInfo([]); // Resetar em caso de erro na requisição\n            console.error('Erro ao enviar os arquivos:', error);\n        } finally {\n            setFiles({ csv1: '', csv2: '' }); // Resetando para as novas chaves\n        }\n    };\n\n    const button = filesUploaded >= 2 ? \n        <Button variant=\"contained\" onClick={sendFiles}>\n            enviar\n        </Button> :\n        <Button variant=\"contained\" disabled>\n            Arquivos inseridos ({filesUploaded} de 2)\n        </Button>;\n\n    return (\n        <div className='uploadzone'>\n            <div className=\"uploadzone__dropzones\">\n                <DropZone files={files} setFiles={setFiles} acceptType={{'text/csv': ['.csv']}} fileType={'csv1'}/>\n                <DropZone files={files} setFiles={setFiles} acceptType={{'text/csv': ['.csv']}} fileType={'csv2'}/>\n            </div>\n\n            {button}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}