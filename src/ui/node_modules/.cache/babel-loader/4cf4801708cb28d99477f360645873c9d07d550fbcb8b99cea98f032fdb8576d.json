{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Let\\xEDcia\\\\Documents\\\\r2t\\\\src\\\\ui\\\\src\\\\components\\\\UploadZone.jsx\",\n  _s = $RefreshSig$();\nimport Button from '@mui/material/Button';\nimport { DropZone } from './DropZone';\nimport { useContext, useState } from 'react';\nimport { InfoContext } from '../App';\nimport '../styles/uploadzone.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UploadZone() {\n  _s();\n  const [files, setFiles] = useState({\n    csv1: '',\n    // Alterado para 'csv1'\n    csv2: '' // Alterado para 'csv2'\n  });\n  const setInfo = useContext(InfoContext);\n  const [csvData, setCsvData] = useState([]);\n  const filesUploaded = Object.values(files).reduce((prev, curr) => {\n    return prev + (curr instanceof File ? 1 : 0);\n  }, 0);\n  const sendFiles = async () => {\n    const formData = new FormData();\n    formData.append('csv1', files.csv1); // Usando a chave 'csv1'\n    formData.append('csv2', files.csv2); // Usando a chave 'csv2'\n\n    const res = await fetch(`http://localhost:5000/upload`, {\n      method: 'POST',\n      body: formData\n    });\n    const result = await res.json();\n    setInfo(result);\n    setFiles({\n      csv1: '',\n      csv2: ''\n    }); // Resetando para as novas chaves\n\n    if (res.ok) {\n      setCsvData(result.data); // Armazenando os dados do CSV\n    } else {\n      setCsvData([]); // Limpando os dados caso haja erro\n    }\n  };\n  const button = filesUploaded >= 2 ? /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    onClick: sendFiles,\n    children: \"enviar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    disabled: true,\n    children: [\"Arquivos inseridos (\", filesUploaded, \" de 2)\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadzone\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadzone__dropzones\",\n      children: [/*#__PURE__*/_jsxDEV(DropZone, {\n        files: files,\n        setFiles: setFiles,\n        acceptType: {\n          'text/csv': ['.csv']\n        },\n        fileType: 'csv1'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(DropZone, {\n        files: files,\n        setFiles: setFiles,\n        acceptType: {\n          'text/csv': ['.csv']\n        },\n        fileType: 'csv2'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), button, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"csv-data\",\n      children: csvData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: csvData[0].map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: csvData.slice(1).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cell\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadZone, \"SrSjJd5oX6y6P24n/uNTj4FmlGU=\");\n_c = UploadZone;\nvar _c;\n$RefreshReg$(_c, \"UploadZone\");","map":{"version":3,"names":["Button","DropZone","useContext","useState","InfoContext","jsxDEV","_jsxDEV","UploadZone","_s","files","setFiles","csv1","csv2","setInfo","csvData","setCsvData","filesUploaded","Object","values","reduce","prev","curr","File","sendFiles","formData","FormData","append","res","fetch","method","body","result","json","ok","data","button","variant","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","acceptType","fileType","length","map","header","index","slice","row","rowIndex","cell","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/LetÃ­cia/Documents/r2t/src/ui/src/components/UploadZone.jsx"],"sourcesContent":["import Button from '@mui/material/Button'\nimport { DropZone } from './DropZone'\nimport { useContext, useState } from 'react'\nimport { InfoContext } from '../App'\nimport '../styles/uploadzone.css'\n\nexport function UploadZone() {\n    const [files, setFiles] = useState({\n        csv1: '',  // Alterado para 'csv1'\n        csv2: ''   // Alterado para 'csv2'\n    })\n\n    const setInfo = useContext(InfoContext)\n    const [csvData, setCsvData] = useState([])\n\n    const filesUploaded = Object.values(files).reduce((prev, curr) => {\n        return prev + (curr instanceof File ? 1 : 0)\n    }, 0)\n\n    const sendFiles = async () => {\n        const formData = new FormData()\n        formData.append('csv1', files.csv1)  // Usando a chave 'csv1'\n        formData.append('csv2', files.csv2)  // Usando a chave 'csv2'\n\n        const res = await fetch(`http://localhost:5000/upload`, {\n            method: 'POST',\n            body: formData\n        })\n        \n        const result = await res.json();\n        setInfo(result);\n        setFiles({ csv1: '', csv2: '' });  // Resetando para as novas chaves\n\n        if (res.ok) {\n            setCsvData(result.data);  // Armazenando os dados do CSV\n        } else {\n            setCsvData([]);  // Limpando os dados caso haja erro\n        }\n    }\n\n    const button = filesUploaded >= 2 ? \n    <Button variant=\"contained\" onClick={sendFiles}>\n        enviar\n    </Button> :\n    <Button variant=\"contained\" disabled>\n        Arquivos inseridos ({filesUploaded} de 2)\n    </Button>\n\n    return (\n    <div className='uploadzone'>\n        <div className=\"uploadzone__dropzones\">\n            <DropZone files={files} setFiles={setFiles} acceptType={{'text/csv': ['.csv']}} fileType={'csv1'}/>  {/* Alterado para 'csv1' */}\n            <DropZone files={files} setFiles={setFiles} acceptType={{'text/csv': ['.csv']}} fileType={'csv2'}/>  {/* Alterado para 'csv2' */}\n        </div>\n        {button}\n        {/* Renderizando os dados do CSV */}\n        <div className=\"csv-data\">\n            {csvData.length > 0 && (\n                <table>\n                    <thead>\n                        <tr>\n                            {csvData[0].map((header, index) => (\n                                <th key={index}>{header}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {csvData.slice(1).map((row, rowIndex) => (\n                            <tr key={rowIndex}>\n                                {row.map((cell, cellIndex) => (\n                                    <td key={cellIndex}>{cell}</td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )}\n        </div>\n    </div>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}